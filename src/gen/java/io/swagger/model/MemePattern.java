/*
 * ProxyImgFlip
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.json.JSONObject;

/**
 * Objet Meme Pattern
 */
@ApiModel(description = "Objet Meme Pattern")
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2016-11-27T10:15:06.921Z")
public class MemePattern   {
  @JsonProperty("id_imgflip")
  private String idImgflip = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("text_top")
  private String textTop = "";

  @JsonProperty("text_bottom")
  private String textBottom = "";

  public MemePattern idImgflip(String idImgflip) {
    this.idImgflip = idImgflip;
    return this;
  }

   /**
   * Get idImgflip
   * @return idImgflip
  **/
  @ApiModelProperty(value = "")
  public String getIdImgflip() {
    return idImgflip;
  }

  public void setIdImgflip(String idImgflip) {
    this.idImgflip = idImgflip;
  }

  public MemePattern name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MemePattern textTop(String textTop) {
    this.textTop = textTop;
    return this;
  }

   /**
   * Get textTop
   * @return textTop
  **/
  @ApiModelProperty(value = "")
  public String getTextTop() {
    return textTop;
  }

  public void setTextTop(String textTop) {
    this.textTop = textTop;
  }

  public MemePattern textBottom(String textBottom) {
    this.textBottom = textBottom;
    return this;
  }

   /**
   * Get textBottom
   * @return textBottom
  **/
  @ApiModelProperty(value = "")
  public String getTextBottom() {
    return textBottom;
  }

  public void setTextBottom(String textBottom) {
    this.textBottom = textBottom;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MemePattern memePattern = (MemePattern) o;
    return Objects.equals(this.idImgflip, memePattern.idImgflip) &&
        Objects.equals(this.name, memePattern.name) &&
        Objects.equals(this.textTop, memePattern.textTop) &&
        Objects.equals(this.textBottom, memePattern.textBottom);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idImgflip, name, textTop, textBottom);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Mettern {\n");
    
    sb.append("    idImgflip: ").append(toIndentedString(idImgflip)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    textTop: ").append(toIndentedString(textTop)).append("\n");
    sb.append("    textBottom: ").append(toIndentedString(textBottom)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  public JSONObject toJSON() {
      JSONObject sb= new JSONObject();
      sb.append("idImgflip",this.idImgflip);
      sb.append("name",this.name);
      sb.append("textTop",this.textTop);
      sb.append("texBottom",this.textBottom);
    return sb;
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

